[
  {
    "original_index": 147,
    "instance_id": "pallets__flask-4045",
    "repo": "pallets/flask",
    "problem_statement": "Raise error when blueprint name contains a dot\nThis is required since every dot is now significant since blueprints can be nested. An error was already added for endpoint names in 1.0, but should have been added for this as well.\n",
    "patch": "diff --git a/src/flask/blueprints.py b/src/flask/blueprints.py\n--- a/src/flask/blueprints.py\n+++ b/src/flask/blueprints.py\n@@ -188,6 +188,10 @@ def __init__(\n             template_folder=template_folder,\n             root_path=root_path,\n         )\n+\n+        if \".\" in name:\n+            raise ValueError(\"'name' may not contain a dot '.' character.\")\n+\n         self.name = name\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n@@ -360,12 +364,12 @@ def add_url_rule(\n         \"\"\"Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n         the :func:`url_for` function is prefixed with the name of the blueprint.\n         \"\"\"\n-        if endpoint:\n-            assert \".\" not in endpoint, \"Blueprint endpoints should not contain dots\"\n-        if view_func and hasattr(view_func, \"__name__\"):\n-            assert (\n-                \".\" not in view_func.__name__\n-            ), \"Blueprint view function name should not contain dots\"\n+        if endpoint and \".\" in endpoint:\n+            raise ValueError(\"'endpoint' may not contain a dot '.' character.\")\n+\n+        if view_func and hasattr(view_func, \"__name__\") and \".\" in view_func.__name__:\n+            raise ValueError(\"'view_func' name may not contain a dot '.' character.\")\n+\n         self.record(lambda s: s.add_url_rule(rule, endpoint, view_func, **options))\n \n     def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n",
    "test_patch": "diff --git a/tests/test_basic.py b/tests/test_basic.py\n--- a/tests/test_basic.py\n+++ b/tests/test_basic.py\n@@ -1631,7 +1631,7 @@ def something_else():\n \n \n def test_inject_blueprint_url_defaults(app):\n-    bp = flask.Blueprint(\"foo.bar.baz\", __name__, template_folder=\"template\")\n+    bp = flask.Blueprint(\"foo\", __name__, template_folder=\"template\")\n \n     @bp.url_defaults\n     def bp_defaults(endpoint, values):\n@@ -1644,12 +1644,12 @@ def view(page):\n     app.register_blueprint(bp)\n \n     values = dict()\n-    app.inject_url_defaults(\"foo.bar.baz.view\", values)\n+    app.inject_url_defaults(\"foo.view\", values)\n     expected = dict(page=\"login\")\n     assert values == expected\n \n     with app.test_request_context(\"/somepage\"):\n-        url = flask.url_for(\"foo.bar.baz.view\")\n+        url = flask.url_for(\"foo.view\")\n     expected = \"/login\"\n     assert url == expected\n \ndiff --git a/tests/test_blueprints.py b/tests/test_blueprints.py\n--- a/tests/test_blueprints.py\n+++ b/tests/test_blueprints.py\n@@ -1,5 +1,3 @@\n-import functools\n-\n import pytest\n from jinja2 import TemplateNotFound\n from werkzeug.http import parse_cache_control_header\n@@ -253,28 +251,9 @@ def test_templates_list(test_apps):\n     assert templates == [\"admin/index.html\", \"frontend/index.html\"]\n \n \n-def test_dotted_names(app, client):\n-    frontend = flask.Blueprint(\"myapp.frontend\", __name__)\n-    backend = flask.Blueprint(\"myapp.backend\", __name__)\n-\n-    @frontend.route(\"/fe\")\n-    def frontend_index():\n-        return flask.url_for(\"myapp.backend.backend_index\")\n-\n-    @frontend.route(\"/fe2\")\n-    def frontend_page2():\n-        return flask.url_for(\".frontend_index\")\n-\n-    @backend.route(\"/be\")\n-    def backend_index():\n-        return flask.url_for(\"myapp.frontend.frontend_index\")\n-\n-    app.register_blueprint(frontend)\n-    app.register_blueprint(backend)\n-\n-    assert client.get(\"/fe\").data.strip() == b\"/be\"\n-    assert client.get(\"/fe2\").data.strip() == b\"/fe\"\n-    assert client.get(\"/be\").data.strip() == b\"/fe\"\n+def test_dotted_name_not_allowed(app, client):\n+    with pytest.raises(ValueError):\n+        flask.Blueprint(\"app.ui\", __name__)\n \n \n def test_dotted_names_from_app(app, client):\n@@ -343,62 +322,19 @@ def index():\n def test_route_decorator_custom_endpoint_with_dots(app, client):\n     bp = flask.Blueprint(\"bp\", __name__)\n \n-    @bp.route(\"/foo\")\n-    def foo():\n-        return flask.request.endpoint\n-\n-    try:\n-\n-        @bp.route(\"/bar\", endpoint=\"bar.bar\")\n-        def foo_bar():\n-            return flask.request.endpoint\n-\n-    except AssertionError:\n-        pass\n-    else:\n-        raise AssertionError(\"expected AssertionError not raised\")\n-\n-    try:\n-\n-        @bp.route(\"/bar/123\", endpoint=\"bar.123\")\n-        def foo_bar_foo():\n-            return flask.request.endpoint\n-\n-    except AssertionError:\n-        pass\n-    else:\n-        raise AssertionError(\"expected AssertionError not raised\")\n-\n-    def foo_foo_foo():\n-        pass\n-\n-    pytest.raises(\n-        AssertionError,\n-        lambda: bp.add_url_rule(\"/bar/123\", endpoint=\"bar.123\", view_func=foo_foo_foo),\n-    )\n-\n-    pytest.raises(\n-        AssertionError, bp.route(\"/bar/123\", endpoint=\"bar.123\"), lambda: None\n-    )\n-\n-    foo_foo_foo.__name__ = \"bar.123\"\n+    with pytest.raises(ValueError):\n+        bp.route(\"/\", endpoint=\"a.b\")(lambda: \"\")\n \n-    pytest.raises(\n-        AssertionError, lambda: bp.add_url_rule(\"/bar/123\", view_func=foo_foo_foo)\n-    )\n+    with pytest.raises(ValueError):\n+        bp.add_url_rule(\"/\", endpoint=\"a.b\")\n \n-    bp.add_url_rule(\n-        \"/bar/456\", endpoint=\"foofoofoo\", view_func=functools.partial(foo_foo_foo)\n-    )\n+    def view():\n+        return \"\"\n \n-    app.register_blueprint(bp, url_prefix=\"/py\")\n+    view.__name__ = \"a.b\"\n \n-    assert client.get(\"/py/foo\").data == b\"bp.foo\"\n-    # The rule's didn't actually made it through\n-    rv = client.get(\"/py/bar\")\n-    assert rv.status_code == 404\n-    rv = client.get(\"/py/bar/123\")\n-    assert rv.status_code == 404\n+    with pytest.raises(ValueError):\n+        bp.add_url_rule(\"/\", view_func=view)\n \n \n def test_endpoint_decorator(app, client):\n",
    "problem_length": 230
  },
  {
    "original_index": 170,
    "instance_id": "pytest-dev__pytest-5221",
    "repo": "pytest-dev/pytest",
    "problem_statement": "Display fixture scope with `pytest --fixtures`\nIt would be useful to show fixture scopes with `pytest --fixtures`; currently the only way to learn the scope of a fixture is look at the docs (when that is documented) or at the source code.\n",
    "patch": "diff --git a/src/_pytest/python.py b/src/_pytest/python.py\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -1342,17 +1342,19 @@ def _showfixtures_main(config, session):\n                 currentmodule = module\n         if verbose <= 0 and argname[0] == \"_\":\n             continue\n+        tw.write(argname, green=True)\n+        if fixturedef.scope != \"function\":\n+            tw.write(\" [%s scope]\" % fixturedef.scope, cyan=True)\n         if verbose > 0:\n-            funcargspec = \"%s -- %s\" % (argname, bestrel)\n-        else:\n-            funcargspec = argname\n-        tw.line(funcargspec, green=True)\n+            tw.write(\" -- %s\" % bestrel, yellow=True)\n+        tw.write(\"\\n\")\n         loc = getlocation(fixturedef.func, curdir)\n         doc = fixturedef.func.__doc__ or \"\"\n         if doc:\n             write_docstring(tw, doc)\n         else:\n             tw.line(\"    %s: no docstring available\" % (loc,), red=True)\n+        tw.line()\n \n \n def write_docstring(tw, doc, indent=\"    \"):\n",
    "test_patch": "diff --git a/testing/python/fixtures.py b/testing/python/fixtures.py\n--- a/testing/python/fixtures.py\n+++ b/testing/python/fixtures.py\n@@ -3037,11 +3037,25 @@ def test_funcarg_compat(self, testdir):\n \n     def test_show_fixtures(self, testdir):\n         result = testdir.runpytest(\"--fixtures\")\n-        result.stdout.fnmatch_lines([\"*tmpdir*\", \"*temporary directory*\"])\n+        result.stdout.fnmatch_lines(\n+            [\n+                \"tmpdir_factory [[]session scope[]]\",\n+                \"*for the test session*\",\n+                \"tmpdir\",\n+                \"*temporary directory*\",\n+            ]\n+        )\n \n     def test_show_fixtures_verbose(self, testdir):\n         result = testdir.runpytest(\"--fixtures\", \"-v\")\n-        result.stdout.fnmatch_lines([\"*tmpdir*--*tmpdir.py*\", \"*temporary directory*\"])\n+        result.stdout.fnmatch_lines(\n+            [\n+                \"tmpdir_factory [[]session scope[]] -- *tmpdir.py*\",\n+                \"*for the test session*\",\n+                \"tmpdir -- *tmpdir.py*\",\n+                \"*temporary directory*\",\n+            ]\n+        )\n \n     def test_show_fixtures_testmodule(self, testdir):\n         p = testdir.makepyfile(\n",
    "problem_length": 239
  },
  {
    "original_index": 257,
    "instance_id": "sympy__sympy-16503",
    "repo": "sympy/sympy",
    "problem_statement": "Bad centering for Sum pretty print\n```\r\n>>> pprint(Sum(x, (x, 1, oo)) + 3)\r\n  \u221e\r\n ___\r\n \u2572\r\n  \u2572   x\r\n  \u2571     + 3\r\n \u2571\r\n \u203e\u203e\u203e\r\nx = 1\r\n```\r\n\r\nThe `x` and the `+ 3` should be aligned. I'm not sure if the `x` should be lower of if the `+ 3` should be higher. \n",
    "patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -564,7 +564,7 @@ def adjust(s, wid=None, how='<^>'):\n                 for i in reversed(range(1, d)):\n                     lines.append('%s/%s' % (' '*i, ' '*(w - i)))\n                 lines.append(\"/\" + \"_\"*(w - 1) + ',')\n-                return d, h + more, lines, 0\n+                return d, h + more, lines, more\n             else:\n                 w = w + more\n                 d = d + more\n@@ -619,7 +619,7 @@ def adjust(s, wid=None, how='<^>'):\n             if first:\n                 # change F baseline so it centers on the sign\n                 prettyF.baseline -= d - (prettyF.height()//2 -\n-                                         prettyF.baseline) - adjustment\n+                                         prettyF.baseline)\n                 first = False\n \n             # put padding to the right\n@@ -629,7 +629,11 @@ def adjust(s, wid=None, how='<^>'):\n             # put the present prettyF to the right\n             prettyF = prettyForm(*prettySign.right(prettyF))\n \n-        prettyF.baseline = max_upper + sign_height//2\n+        # adjust baseline of ascii mode sigma with an odd height so that it is\n+        # exactly through the center\n+        ascii_adjustment = ascii_mode if not adjustment else 0\n+        prettyF.baseline = max_upper + sign_height//2 + ascii_adjustment\n+\n         prettyF.binding = prettyForm.MUL\n         return prettyF\n \n",
    "test_patch": "diff --git a/sympy/printing/pretty/tests/test_pretty.py b/sympy/printing/pretty/tests/test_pretty.py\n--- a/sympy/printing/pretty/tests/test_pretty.py\n+++ b/sympy/printing/pretty/tests/test_pretty.py\n@@ -4423,14 +4423,14 @@ def test_pretty_sum():\n   n             \\n\\\n ______          \\n\\\n \u2572               \\n\\\n- \u2572      \u221e       \\n\\\n-  \u2572     \u2320       \\n\\\n-   \u2572    \u23ae   n   \\n\\\n-    \u2572   \u23ae  x  dx\\n\\\n-    \u2571   \u2321       \\n\\\n-   \u2571    -\u221e      \\n\\\n-  \u2571    k        \\n\\\n- \u2571              \\n\\\n+ \u2572              \\n\\\n+  \u2572     \u221e       \\n\\\n+   \u2572    \u2320       \\n\\\n+    \u2572   \u23ae   n   \\n\\\n+    \u2571   \u23ae  x  dx\\n\\\n+   \u2571    \u2321       \\n\\\n+  \u2571     -\u221e      \\n\\\n+ \u2571     k        \\n\\\n \u2571               \\n\\\n \u203e\u203e\u203e\u203e\u203e\u203e          \\n\\\n k = 0           \\\n@@ -4474,14 +4474,14 @@ def test_pretty_sum():\n -\u221e                \\n\\\n  ______           \\n\\\n  \u2572                \\n\\\n-  \u2572       \u221e       \\n\\\n-   \u2572      \u2320       \\n\\\n-    \u2572     \u23ae   n   \\n\\\n-     \u2572    \u23ae  x  dx\\n\\\n-     \u2571    \u2321       \\n\\\n-    \u2571     -\u221e      \\n\\\n-   \u2571     k        \\n\\\n-  \u2571               \\n\\\n+  \u2572               \\n\\\n+   \u2572      \u221e       \\n\\\n+    \u2572     \u2320       \\n\\\n+     \u2572    \u23ae   n   \\n\\\n+     \u2571    \u23ae  x  dx\\n\\\n+    \u2571     \u2321       \\n\\\n+   \u2571      -\u221e      \\n\\\n+  \u2571      k        \\n\\\n  \u2571                \\n\\\n  \u203e\u203e\u203e\u203e\u203e\u203e           \\n\\\n  k = 0            \\\n@@ -4527,14 +4527,14 @@ def test_pretty_sum():\n           -\u221e                         \\n\\\n            ______                    \\n\\\n            \u2572                         \\n\\\n-            \u2572                \u221e       \\n\\\n-             \u2572               \u2320       \\n\\\n-              \u2572              \u23ae   n   \\n\\\n-               \u2572             \u23ae  x  dx\\n\\\n-               \u2571             \u2321       \\n\\\n-              \u2571              -\u221e      \\n\\\n-             \u2571              k        \\n\\\n-            \u2571                        \\n\\\n+            \u2572                        \\n\\\n+             \u2572               \u221e       \\n\\\n+              \u2572              \u2320       \\n\\\n+               \u2572             \u23ae   n   \\n\\\n+               \u2571             \u23ae  x  dx\\n\\\n+              \u2571              \u2321       \\n\\\n+             \u2571               -\u221e      \\n\\\n+            \u2571               k        \\n\\\n            \u2571                         \\n\\\n            \u203e\u203e\u203e\u203e\u203e\u203e                    \\n\\\n      2        2       1   x          \\n\\\n@@ -4572,14 +4572,14 @@ def test_pretty_sum():\n                   x   n          \\n\\\n          ______                  \\n\\\n          \u2572                       \\n\\\n-          \u2572              \u221e       \\n\\\n-           \u2572             \u2320       \\n\\\n-            \u2572            \u23ae   n   \\n\\\n-             \u2572           \u23ae  x  dx\\n\\\n-             \u2571           \u2321       \\n\\\n-            \u2571            -\u221e      \\n\\\n-           \u2571            k        \\n\\\n-          \u2571                      \\n\\\n+          \u2572                      \\n\\\n+           \u2572             \u221e       \\n\\\n+            \u2572            \u2320       \\n\\\n+             \u2572           \u23ae   n   \\n\\\n+             \u2571           \u23ae  x  dx\\n\\\n+            \u2571            \u2321       \\n\\\n+           \u2571             -\u221e      \\n\\\n+          \u2571             k        \\n\\\n          \u2571                       \\n\\\n          \u203e\u203e\u203e\u203e\u203e\u203e                  \\n\\\n          k = 0                   \\\n@@ -4602,8 +4602,8 @@ def test_pretty_sum():\n   \u221e    \\n\\\n  ___   \\n\\\n  \u2572     \\n\\\n-  \u2572   x\\n\\\n-  \u2571    \\n\\\n+  \u2572    \\n\\\n+  \u2571   x\\n\\\n  \u2571     \\n\\\n  \u203e\u203e\u203e   \\n\\\n x = 0  \\\n@@ -4655,10 +4655,10 @@ def test_pretty_sum():\n   \u221e    \\n\\\n  ____  \\n\\\n  \u2572     \\n\\\n-  \u2572   x\\n\\\n-   \u2572  \u2500\\n\\\n-   \u2571  2\\n\\\n-  \u2571    \\n\\\n+  \u2572    \\n\\\n+   \u2572  x\\n\\\n+   \u2571  \u2500\\n\\\n+  \u2571   2\\n\\\n  \u2571     \\n\\\n  \u203e\u203e\u203e\u203e  \\n\\\n x = 0  \\\n@@ -4716,12 +4716,12 @@ def test_pretty_sum():\n   \u221e           \\n\\\n _____         \\n\\\n \u2572             \\n\\\n- \u2572           n\\n\\\n-  \u2572   \u239b    x\u239e \\n\\\n-   \u2572  \u239c    \u2500\u239f \\n\\\n-   \u2571  \u239c 3  2\u239f \\n\\\n-  \u2571   \u239dx \u22c5y \u23a0 \\n\\\n- \u2571            \\n\\\n+ \u2572            \\n\\\n+  \u2572          n\\n\\\n+   \u2572  \u239b    x\u239e \\n\\\n+   \u2571  \u239c    \u2500\u239f \\n\\\n+  \u2571   \u239c 3  2\u239f \\n\\\n+ \u2571    \u239dx \u22c5y \u23a0 \\n\\\n \u2571             \\n\\\n \u203e\u203e\u203e\u203e\u203e         \\n\\\n x = 0         \\\n@@ -4844,14 +4844,14 @@ def test_pretty_sum():\n     \u221e          n                         \\n\\\n   ______   ______                        \\n\\\n   \u2572        \u2572                             \\n\\\n-   \u2572        \u2572     \u239b        1    \u239e        \\n\\\n-    \u2572        \u2572    \u239c1 + \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f        \\n\\\n-     \u2572        \u2572   \u239c          1  \u239f        \\n\\\n-      \u2572        \u2572  \u239c    1 + \u2500\u2500\u2500\u2500\u2500\u239f     1  \\n\\\n-      \u2571        \u2571  \u239c            1\u239f + \u2500\u2500\u2500\u2500\u2500\\n\\\n-     \u2571        \u2571   \u239c        1 + \u2500\u239f       1\\n\\\n-    \u2571        \u2571    \u239d            k\u23a0   1 + \u2500\\n\\\n-   \u2571        \u2571                           k\\n\\\n+   \u2572        \u2572                            \\n\\\n+    \u2572        \u2572    \u239b        1    \u239e        \\n\\\n+     \u2572        \u2572   \u239c1 + \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u239f        \\n\\\n+      \u2572        \u2572  \u239c          1  \u239f     1  \\n\\\n+      \u2571        \u2571  \u239c    1 + \u2500\u2500\u2500\u2500\u2500\u239f + \u2500\u2500\u2500\u2500\u2500\\n\\\n+     \u2571        \u2571   \u239c            1\u239f       1\\n\\\n+    \u2571        \u2571    \u239c        1 + \u2500\u239f   1 + \u2500\\n\\\n+   \u2571        \u2571     \u239d            k\u23a0       k\\n\\\n   \u2571        \u2571                             \\n\\\n   \u203e\u203e\u203e\u203e\u203e\u203e   \u203e\u203e\u203e\u203e\u203e\u203e                        \\n\\\n       1   k = 111                        \\n\\\n",
    "problem_length": 253
  },
  {
    "original_index": 84,
    "instance_id": "django__django-14999",
    "repo": "django/django",
    "problem_statement": "RenameModel with db_table should be a noop.\nDescription\n\t\nA RenameModel operation that already has db_table defined must be a noop.\nIn Postgres, it drops and recreates foreign key constraints. In sqlite it recreates the table (as expected for a table renaming).\n",
    "patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -320,12 +320,13 @@ def database_forwards(self, app_label, schema_editor, from_state, to_state):\n         new_model = to_state.apps.get_model(app_label, self.new_name)\n         if self.allow_migrate_model(schema_editor.connection.alias, new_model):\n             old_model = from_state.apps.get_model(app_label, self.old_name)\n+            old_db_table = old_model._meta.db_table\n+            new_db_table = new_model._meta.db_table\n+            # Don't alter when a table name is not changed.\n+            if old_db_table == new_db_table:\n+                return\n             # Move the main table\n-            schema_editor.alter_db_table(\n-                new_model,\n-                old_model._meta.db_table,\n-                new_model._meta.db_table,\n-            )\n+            schema_editor.alter_db_table(new_model, old_db_table, new_db_table)\n             # Alter the fields pointing to us\n             for related_object in old_model._meta.related_objects:\n                 if related_object.related_model == old_model:\n",
    "test_patch": "diff --git a/tests/migrations/test_operations.py b/tests/migrations/test_operations.py\n--- a/tests/migrations/test_operations.py\n+++ b/tests/migrations/test_operations.py\n@@ -793,6 +793,28 @@ def test_rename_model_with_m2m(self):\n         self.assertEqual(Rider.objects.count(), 2)\n         self.assertEqual(Pony._meta.get_field('riders').remote_field.through.objects.count(), 2)\n \n+    def test_rename_model_with_db_table_noop(self):\n+        app_label = 'test_rmwdbtn'\n+        project_state = self.apply_operations(app_label, ProjectState(), operations=[\n+            migrations.CreateModel('Rider', fields=[\n+                ('id', models.AutoField(primary_key=True)),\n+            ], options={'db_table': 'rider'}),\n+            migrations.CreateModel('Pony', fields=[\n+                ('id', models.AutoField(primary_key=True)),\n+                ('rider', models.ForeignKey('%s.Rider' % app_label, models.CASCADE)),\n+            ]),\n+        ])\n+        new_state = project_state.clone()\n+        operation = migrations.RenameModel('Rider', 'Runner')\n+        operation.state_forwards(app_label, new_state)\n+\n+        with connection.schema_editor() as editor:\n+            with self.assertNumQueries(0):\n+                operation.database_forwards(app_label, editor, project_state, new_state)\n+        with connection.schema_editor() as editor:\n+            with self.assertNumQueries(0):\n+                operation.database_backwards(app_label, editor, new_state, project_state)\n+\n     def test_rename_m2m_target_model(self):\n         app_label = \"test_rename_m2m_target_model\"\n         project_state = self.apply_operations(app_label, ProjectState(), operations=[\n",
    "problem_length": 262
  },
  {
    "original_index": 251,
    "instance_id": "sympy__sympy-15345",
    "repo": "sympy/sympy",
    "problem_statement": "mathematica_code gives wrong output with Max\nIf I run the code\r\n\r\n```\r\nx = symbols('x')\r\nmathematica_code(Max(x,2))\r\n```\r\n\r\nthen I would expect the output `'Max[x,2]'` which is valid Mathematica code but instead I get `'Max(2, x)'` which is not valid Mathematica code.\n",
    "patch": "diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -31,7 +31,8 @@\n     \"asech\": [(lambda x: True, \"ArcSech\")],\n     \"acsch\": [(lambda x: True, \"ArcCsch\")],\n     \"conjugate\": [(lambda x: True, \"Conjugate\")],\n-\n+    \"Max\": [(lambda *x: True, \"Max\")],\n+    \"Min\": [(lambda *x: True, \"Min\")],\n }\n \n \n@@ -101,6 +102,8 @@ def _print_Function(self, expr):\n                     return \"%s[%s]\" % (mfunc, self.stringify(expr.args, \", \"))\n         return expr.func.__name__ + \"[%s]\" % self.stringify(expr.args, \", \")\n \n+    _print_MinMaxBase = _print_Function\n+\n     def _print_Integral(self, expr):\n         if len(expr.variables) == 1 and not expr.limits[0][1:]:\n             args = [expr.args[0], expr.variables[0]]\n",
    "test_patch": "diff --git a/sympy/printing/tests/test_mathematica.py b/sympy/printing/tests/test_mathematica.py\n--- a/sympy/printing/tests/test_mathematica.py\n+++ b/sympy/printing/tests/test_mathematica.py\n@@ -2,7 +2,7 @@\n                         Rational, Integer, Tuple, Derivative)\n from sympy.integrals import Integral\n from sympy.concrete import Sum\n-from sympy.functions import exp, sin, cos, conjugate\n+from sympy.functions import exp, sin, cos, conjugate, Max, Min\n \n from sympy import mathematica_code as mcode\n \n@@ -28,6 +28,7 @@ def test_Function():\n     assert mcode(f(x, y, z)) == \"f[x, y, z]\"\n     assert mcode(sin(x) ** cos(x)) == \"Sin[x]^Cos[x]\"\n     assert mcode(conjugate(x)) == \"Conjugate[x]\"\n+    assert mcode(Max(x,y,z)*Min(y,z)) == \"Max[x, y, z]*Min[y, z]\"\n \n \n def test_Pow():\n",
    "problem_length": 269
  },
  {
    "original_index": 244,
    "instance_id": "sympy__sympy-14308",
    "repo": "sympy/sympy",
    "problem_statement": "vectors break pretty printing\n```py\r\nIn [1]: from sympy.vector import *\r\n\r\nIn [2]: e = CoordSysCartesian('e')\r\n\r\nIn [3]: (x/y)**t*e.j\r\nOut[3]:\r\n\u239b   t\u239e e_j\r\n\u239c\u239bx\u239e e_j \u239f\r\n\u239c\u239c\u2500\u239f \u239f\r\n\u239d\u239dy\u23a0 \u23a0\r\n```\r\n\r\nAlso, when it does print correctly, the baseline is wrong (it should be centered). \n",
    "patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -931,26 +931,49 @@ def _print_BasisDependent(self, expr):\n         #Fixing the newlines\n         lengths = []\n         strs = ['']\n+        flag = []\n         for i, partstr in enumerate(o1):\n+            flag.append(0)\n             # XXX: What is this hack?\n             if '\\n' in partstr:\n                 tempstr = partstr\n                 tempstr = tempstr.replace(vectstrs[i], '')\n-                tempstr = tempstr.replace(u'\\N{RIGHT PARENTHESIS UPPER HOOK}',\n-                                          u'\\N{RIGHT PARENTHESIS UPPER HOOK}'\n-                                          + ' ' + vectstrs[i])\n+                if u'\\N{right parenthesis extension}' in tempstr:   # If scalar is a fraction\n+                    for paren in range(len(tempstr)):\n+                        flag[i] = 1\n+                        if tempstr[paren] == u'\\N{right parenthesis extension}':\n+                            tempstr = tempstr[:paren] + u'\\N{right parenthesis extension}'\\\n+                                         + ' '  + vectstrs[i] + tempstr[paren + 1:]\n+                            break\n+                elif u'\\N{RIGHT PARENTHESIS LOWER HOOK}' in tempstr:\n+                    flag[i] = 1\n+                    tempstr = tempstr.replace(u'\\N{RIGHT PARENTHESIS LOWER HOOK}',\n+                                        u'\\N{RIGHT PARENTHESIS LOWER HOOK}'\n+                                        + ' ' + vectstrs[i])\n+                else:\n+                    tempstr = tempstr.replace(u'\\N{RIGHT PARENTHESIS UPPER HOOK}',\n+                                        u'\\N{RIGHT PARENTHESIS UPPER HOOK}'\n+                                        + ' ' + vectstrs[i])\n                 o1[i] = tempstr\n+\n         o1 = [x.split('\\n') for x in o1]\n-        n_newlines = max([len(x) for x in o1])\n-        for parts in o1:\n-            lengths.append(len(parts[0]))\n+        n_newlines = max([len(x) for x in o1])  # Width of part in its pretty form\n+\n+        if 1 in flag:                           # If there was a fractional scalar\n+            for i, parts in enumerate(o1):\n+                if len(parts) == 1:             # If part has no newline\n+                    parts.insert(0, ' ' * (len(parts[0])))\n+                    flag[i] = 1\n+\n+        for i, parts in enumerate(o1):\n+            lengths.append(len(parts[flag[i]]))\n             for j in range(n_newlines):\n                 if j+1 <= len(parts):\n                     if j >= len(strs):\n                         strs.append(' ' * (sum(lengths[:-1]) +\n                                            3*(len(lengths)-1)))\n-                    if j == 0:\n-                        strs[0] += parts[0] + ' + '\n+                    if j == flag[i]:\n+                        strs[flag[i]] += parts[flag[i]] + ' + '\n                     else:\n                         strs[j] += parts[j] + ' '*(lengths[-1] -\n                                                    len(parts[j])+\n",
    "test_patch": "diff --git a/sympy/printing/pretty/tests/test_pretty.py b/sympy/printing/pretty/tests/test_pretty.py\n--- a/sympy/printing/pretty/tests/test_pretty.py\n+++ b/sympy/printing/pretty/tests/test_pretty.py\n@@ -6089,6 +6089,28 @@ def test_MatrixElement_printing():\n     assert upretty(F) == ucode_str1\n \n \n+def test_issue_12675():\n+    from sympy.vector import CoordSys3D\n+    x, y, t, j = symbols('x y t j')\n+    e = CoordSys3D('e')\n+\n+    ucode_str = \\\n+u(\"\"\"\\\n+\u239b   t\u239e    \\n\\\n+\u239c\u239bx\u239e \u239f e_j\\n\\\n+\u239c\u239c\u2500\u239f \u239f    \\n\\\n+\u239d\u239dy\u23a0 \u23a0    \\\n+\"\"\")\n+    assert upretty((x/y)**t*e.j) == ucode_str\n+    ucode_str = \\\n+u(\"\"\"\\\n+\u239b1\u239e    \\n\\\n+\u239c\u2500\u239f e_j\\n\\\n+\u239dy\u23a0    \\\n+\"\"\")\n+    assert upretty((1/y)*e.j) == ucode_str\n+\n+\n def test_MatrixSymbol_printing():\n     # test cases for issue #14237\n     A = MatrixSymbol(\"A\", 3, 3)\ndiff --git a/sympy/vector/tests/test_printing.py b/sympy/vector/tests/test_printing.py\n--- a/sympy/vector/tests/test_printing.py\n+++ b/sympy/vector/tests/test_printing.py\n@@ -37,8 +37,8 @@ def upretty(expr):\n v.append(N.j - (Integral(f(b)) - C.x**2)*N.k)\n upretty_v_8 = u(\n \"\"\"\\\n-N_j + \u239b   2   \u2320        \u239e N_k\\n\\\n-      \u239cC_x  - \u23ae f(b) db\u239f    \\n\\\n+      \u239b   2   \u2320        \u239e    \\n\\\n+N_j + \u239cC_x  - \u23ae f(b) db\u239f N_k\\n\\\n       \u239d       \u2321        \u23a0    \\\n \"\"\")\n pretty_v_8 = u(\n@@ -55,9 +55,9 @@ def upretty(expr):\n v.append((a**2 + b)*N.i + (Integral(f(b)))*N.k)\n upretty_v_11 = u(\n \"\"\"\\\n-\u239b 2    \u239e N_i + \u239b\u2320        \u239e N_k\\n\\\n-\u239da  + b\u23a0       \u239c\u23ae f(b) db\u239f    \\n\\\n-               \u239d\u2321        \u23a0    \\\n+\u239b 2    \u239e        \u239b\u2320        \u239e    \\n\\\n+\u239da  + b\u23a0 N_i  + \u239c\u23ae f(b) db\u239f N_k\\n\\\n+                \u239d\u2321        \u23a0    \\\n \"\"\")\n pretty_v_11 = u(\n \"\"\"\\\n@@ -85,8 +85,8 @@ def upretty(expr):\n # This is the pretty form for ((a**2 + b)*N.i + 3*(C.y - c)*N.k) | N.k\n upretty_d_7 = u(\n \"\"\"\\\n-\u239b 2    \u239e (N_i|N_k) + (3\u22c5C_y - 3\u22c5c) (N_k|N_k)\\n\\\n-\u239da  + b\u23a0                                    \\\n+\u239b 2    \u239e                                     \\n\\\n+\u239da  + b\u23a0 (N_i|N_k)  + (3\u22c5C_y - 3\u22c5c) (N_k|N_k)\\\n \"\"\")\n pretty_d_7 = u(\n \"\"\"\\\n",
    "problem_length": 275
  },
  {
    "original_index": 14,
    "instance_id": "django__django-11179",
    "repo": "django/django",
    "problem_statement": "delete() on instances of models without any dependencies doesn't clear PKs.\nDescription\n\t\nDeleting any model with no dependencies not updates the PK on the model. It should be set to None after .delete() call.\nSee Django.db.models.deletion:276-281. Should update the model line 280.\n",
    "patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -277,6 +277,7 @@ def delete(self):\n             if self.can_fast_delete(instance):\n                 with transaction.mark_for_rollback_on_error():\n                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)\n+                setattr(instance, model._meta.pk.attname, None)\n                 return count, {model._meta.label: count}\n \n         with transaction.atomic(using=self.using, savepoint=False):\n",
    "test_patch": "diff --git a/tests/delete/tests.py b/tests/delete/tests.py\n--- a/tests/delete/tests.py\n+++ b/tests/delete/tests.py\n@@ -1,6 +1,7 @@\n from math import ceil\n \n from django.db import IntegrityError, connection, models\n+from django.db.models.deletion import Collector\n from django.db.models.sql.constants import GET_ITERATOR_CHUNK_SIZE\n from django.test import TestCase, skipIfDBFeature, skipUnlessDBFeature\n \n@@ -471,6 +472,14 @@ def test_fast_delete_qs(self):\n         self.assertEqual(User.objects.count(), 1)\n         self.assertTrue(User.objects.filter(pk=u2.pk).exists())\n \n+    def test_fast_delete_instance_set_pk_none(self):\n+        u = User.objects.create()\n+        # User can be fast-deleted.\n+        collector = Collector(using='default')\n+        self.assertTrue(collector.can_fast_delete(u))\n+        u.delete()\n+        self.assertIsNone(u.pk)\n+\n     def test_fast_delete_joined_qs(self):\n         a = Avatar.objects.create(desc='a')\n         User.objects.create(avatar=a)\n",
    "problem_length": 283
  },
  {
    "original_index": 52,
    "instance_id": "django__django-13315",
    "repo": "django/django",
    "problem_statement": "limit_choices_to on a ForeignKey can render duplicate options in formfield\nDescription\n\t\nIf you pass a Q object as limit_choices_to on a ForeignKey field involving a join, you may end up with duplicate options in your form.\nSee regressiontest in patch for a clear view on the problem.\n",
    "patch": "diff --git a/django/forms/models.py b/django/forms/models.py\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -97,10 +97,18 @@ def model_to_dict(instance, fields=None, exclude=None):\n \n def apply_limit_choices_to_to_formfield(formfield):\n     \"\"\"Apply limit_choices_to to the formfield's queryset if needed.\"\"\"\n+    from django.db.models import Exists, OuterRef, Q\n     if hasattr(formfield, 'queryset') and hasattr(formfield, 'get_limit_choices_to'):\n         limit_choices_to = formfield.get_limit_choices_to()\n-        if limit_choices_to is not None:\n-            formfield.queryset = formfield.queryset.complex_filter(limit_choices_to)\n+        if limit_choices_to:\n+            complex_filter = limit_choices_to\n+            if not isinstance(complex_filter, Q):\n+                complex_filter = Q(**limit_choices_to)\n+            complex_filter &= Q(pk=OuterRef('pk'))\n+            # Use Exists() to avoid potential duplicates.\n+            formfield.queryset = formfield.queryset.filter(\n+                Exists(formfield.queryset.model._base_manager.filter(complex_filter)),\n+            )\n \n \n def fields_for_model(model, fields=None, exclude=None, widgets=None,\n",
    "test_patch": "diff --git a/tests/model_forms/models.py b/tests/model_forms/models.py\n--- a/tests/model_forms/models.py\n+++ b/tests/model_forms/models.py\n@@ -411,9 +411,14 @@ class StumpJoke(models.Model):\n         Character,\n         models.CASCADE,\n         limit_choices_to=today_callable_dict,\n-        related_name=\"+\",\n+        related_name='jokes',\n     )\n-    has_fooled_today = models.ManyToManyField(Character, limit_choices_to=today_callable_q, related_name=\"+\")\n+    has_fooled_today = models.ManyToManyField(\n+        Character,\n+        limit_choices_to=today_callable_q,\n+        related_name='jokes_today',\n+    )\n+    funny = models.BooleanField(default=False)\n \n \n # Model for #13776\ndiff --git a/tests/model_forms/tests.py b/tests/model_forms/tests.py\n--- a/tests/model_forms/tests.py\n+++ b/tests/model_forms/tests.py\n@@ -16,6 +16,7 @@\n )\n from django.template import Context, Template\n from django.test import SimpleTestCase, TestCase, skipUnlessDBFeature\n+from django.test.utils import isolate_apps\n \n from .models import (\n     Article, ArticleStatus, Author, Author1, Award, BetterWriter, BigInt, Book,\n@@ -2829,6 +2830,72 @@ def test_callable_called_each_time_form_is_instantiated(self):\n             StumpJokeForm()\n             self.assertEqual(today_callable_dict.call_count, 3)\n \n+    @isolate_apps('model_forms')\n+    def test_limit_choices_to_no_duplicates(self):\n+        joke1 = StumpJoke.objects.create(\n+            funny=True,\n+            most_recently_fooled=self.threepwood,\n+        )\n+        joke2 = StumpJoke.objects.create(\n+            funny=True,\n+            most_recently_fooled=self.threepwood,\n+        )\n+        joke3 = StumpJoke.objects.create(\n+            funny=True,\n+            most_recently_fooled=self.marley,\n+        )\n+        StumpJoke.objects.create(funny=False, most_recently_fooled=self.marley)\n+        joke1.has_fooled_today.add(self.marley, self.threepwood)\n+        joke2.has_fooled_today.add(self.marley)\n+        joke3.has_fooled_today.add(self.marley, self.threepwood)\n+\n+        class CharacterDetails(models.Model):\n+            character1 = models.ForeignKey(\n+                Character,\n+                models.CASCADE,\n+                limit_choices_to=models.Q(\n+                    jokes__funny=True,\n+                    jokes_today__funny=True,\n+                ),\n+                related_name='details_fk_1',\n+            )\n+            character2 = models.ForeignKey(\n+                Character,\n+                models.CASCADE,\n+                limit_choices_to={\n+                    'jokes__funny': True,\n+                    'jokes_today__funny': True,\n+                },\n+                related_name='details_fk_2',\n+            )\n+            character3 = models.ManyToManyField(\n+                Character,\n+                limit_choices_to=models.Q(\n+                    jokes__funny=True,\n+                    jokes_today__funny=True,\n+                ),\n+                related_name='details_m2m_1',\n+            )\n+\n+        class CharacterDetailsForm(forms.ModelForm):\n+            class Meta:\n+                model = CharacterDetails\n+                fields = '__all__'\n+\n+        form = CharacterDetailsForm()\n+        self.assertCountEqual(\n+            form.fields['character1'].queryset,\n+            [self.marley, self.threepwood],\n+        )\n+        self.assertCountEqual(\n+            form.fields['character2'].queryset,\n+            [self.marley, self.threepwood],\n+        )\n+        self.assertCountEqual(\n+            form.fields['character3'].queryset,\n+            [self.marley, self.threepwood],\n+        )\n+\n \n class FormFieldCallbackTests(SimpleTestCase):\n \n",
    "problem_length": 285
  },
  {
    "original_index": 233,
    "instance_id": "sympy__sympy-13146",
    "repo": "sympy/sympy",
    "problem_statement": "Exponent doesn't fully simplify\nSay I have code like this:\n\n```\nimport sympy\nfrom sympy import *\nx=Symbol('x')\nexpr1 = S(1)/2*x**2.5\nexpr2 = S(1)*x**(S(5)/2)/2\nres = expr1-expr2\nres= simplify(res.evalf(5))\nprint res\n```\n\nThe output is\n`-0.5*x**2.5 + 0.5*x**2.5`\nHow do I simplify it to 0?\n\n",
    "patch": "diff --git a/sympy/core/operations.py b/sympy/core/operations.py\n--- a/sympy/core/operations.py\n+++ b/sympy/core/operations.py\n@@ -332,9 +332,7 @@ def _eval_evalf(self, prec):\n                         args.append(a)\n                     else:\n                         args.append(newa)\n-                if not _aresame(tuple(args), tail_args):\n-                    tail = self.func(*args)\n-                return self.func(x, tail)\n+                return self.func(x, *args)\n \n         # this is the same as above, but there were no pure-number args to\n         # deal with\n@@ -345,9 +343,7 @@ def _eval_evalf(self, prec):\n                 args.append(a)\n             else:\n                 args.append(newa)\n-        if not _aresame(tuple(args), self.args):\n-            return self.func(*args)\n-        return self\n+        return self.func(*args)\n \n     @classmethod\n     def make_args(cls, expr):\n",
    "test_patch": "diff --git a/sympy/core/tests/test_evalf.py b/sympy/core/tests/test_evalf.py\n--- a/sympy/core/tests/test_evalf.py\n+++ b/sympy/core/tests/test_evalf.py\n@@ -227,6 +227,9 @@ def test_evalf_bugs():\n     assert ((oo*I).n() == S.Infinity*I)\n     assert ((oo+oo*I).n() == S.Infinity + S.Infinity*I)\n \n+    #issue 11518\n+    assert NS(2*x**2.5, 5) == '2.0000*x**2.5000'\n+\n \n def test_evalf_integer_parts():\n     a = floor(log(8)/log(2) - exp(-1000), evaluate=False)\n",
    "problem_length": 290
  },
  {
    "original_index": 287,
    "instance_id": "sympy__sympy-21627",
    "repo": "sympy/sympy",
    "problem_statement": "Bug: maximum recusion depth error when checking is_zero of cosh expression\nThe following code causes a `RecursionError: maximum recursion depth exceeded while calling a Python object` error when checked if it is zero:\r\n```\r\nexpr =sympify(\"cosh(acos(-i + acosh(-g + i)))\")\r\nexpr.is_zero\r\n```\n",
    "patch": "diff --git a/sympy/functions/elementary/complexes.py b/sympy/functions/elementary/complexes.py\n--- a/sympy/functions/elementary/complexes.py\n+++ b/sympy/functions/elementary/complexes.py\n@@ -607,6 +607,8 @@ def eval(cls, arg):\n             arg2 = -S.ImaginaryUnit * arg\n             if arg2.is_extended_nonnegative:\n                 return arg2\n+        if arg.is_extended_real:\n+            return\n         # reject result if all new conjugates are just wrappers around\n         # an expression that was already in the arg\n         conj = signsimp(arg.conjugate(), evaluate=False)\n",
    "test_patch": "diff --git a/sympy/functions/elementary/tests/test_complexes.py b/sympy/functions/elementary/tests/test_complexes.py\n--- a/sympy/functions/elementary/tests/test_complexes.py\n+++ b/sympy/functions/elementary/tests/test_complexes.py\n@@ -464,6 +464,8 @@ def test_Abs():\n     # issue 19627\n     f = Function('f', positive=True)\n     assert sqrt(f(x)**2) == f(x)\n+    # issue 21625\n+    assert unchanged(Abs, S(\"im(acos(-i + acosh(-g + i)))\"))\n \n \n def test_Abs_rewrite():\n",
    "problem_length": 291
  }
]